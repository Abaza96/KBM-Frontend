name: React CI/CD Pipeline 🚀

on:
  push:
    branches:
      - main
      - staging
      - qa
  pull_request:
    branches:
      - main
      - staging
      - qa

jobs:
  test:
    runs-on: self-hosted
    # 🧪 Run tests across different Node.js versions
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code 📦
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}  NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies ⬇️
        run: npm ci
        shell: cmd

      - name: Run linting 🔍
        run: npm run lint
        shell: cmd

      # - name: Run unit tests 📊
        # run: npm test -- --watchAll=false
        # shell: cmd

  build:
    runs-on: self-hosted
    needs: test
    if: success() # Only build if tests pass ✅

    steps:
      - name: Checkout code 📦
        uses: actions/checkout@v4

      - name: Setup Node.js 🛠️
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies ⬇️
        run: npm ci
        shell: cmd

      - name: Build React application for QA ✨
        run: npm run build
        shell: cmd
        if: github.ref == 'refs/heads/qa'

      - name: Build React application for Staging 🚧
        run: npm run build
        shell: cmd
        if: github.ref == 'refs/heads/staging'

      - name: Build React application for Production 🚀
        run: npm run build
        shell: cmd
        if: github.ref == 'refs/heads/main'

      - name: Upload build artifacts ⬆️
        uses: actions/upload-artifact@v4
        with:
          name: react-build-files
          path: build/ # Adjust to 'dist/' or your actual build output directory
          retention-days: 1

  deploy:
    runs-on: self-hosted
    needs: build
    if: success() && github.event_name == 'push' # Only deploy on successful pushes 🚀

    steps:
      - name: Download build artifacts ⬇️
        uses: actions/download-artifact@v4
        with:
          name: react-build-files
          path: build/

      - name: Deploy to QA server 🧪
        run: |
          if exist "C:\inetpub\wwwroot\react-app-qa" rmdir /s /q "C:\inetpub\wwwroot\react-app-qa"
          mkdir "C:\inetpub\wwwroot\react-app-qa"
          xcopy ".\build\*" "C:\inetpub\wwwroot\react-app-qa\" /E /I /Y
        shell: cmd
        if: github.ref == 'refs/heads/qa'

      - name: Deploy to Staging server  staging
        run: |
          if exist "C:\inetpub\wwwroot\react-app-staging" rmdir /s /q "C:\inetpub\wwwroot\react-app-staging"
          mkdir "C:\inetpub\wwwroot\react-app-staging"
          xcopy ".\build\*" "C:\inetpub\wwwroot\react-app-staging\" /E /I /Y
        shell: cmd
        if: github.ref == 'refs/heads/staging'

      - name: Deploy to Production server 🚀
        run: |
          if exist "C:\inetpub\wwwroot\react-app" rmdir /s /q "C:\inetpub\wwwroot\react-app"
          mkdir "C:\inetpub\wwwroot\react-app"
          xcopy ".\build\*" "C:\inetpub\wwwroot\react-app\" /E /I /Y
        shell: cmd
        if: github.ref == 'refs/heads/main'

      - name: Restart IIS Application Pool 🔄
        run: |
          powershell -Command "Import-Module WebAdministration; Restart-WebAppPool -Name 'DefaultAppPool'"
        shell: cmd
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/qa'
